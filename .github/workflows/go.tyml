name: Go-Rest-Cli CI

on:
  push:
    branches: [ "main", "*" ]
  pull_request:

jobs:

  stage-set:
    runs-on: ubuntu-latest
        
    outputs:
        stage: ${{ steps.stage_name.outputs.env-name }}
    steps:
    - uses: actions/checkout@v4

    - name: Stage Name
      id: stage_name
      run: |
        branch_name=$(git rev-parse --abbrev-ref HEAD)
        stage="dev"
         if [[ "$branch_name" == "main" ]]; then
          stage="prod"
         fi
         echo $stage
         echo "env-name=$stage" >> "$GITHUB_OUTPUT"


  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    - run: |
       go version
    - name: Build
      run: env GOOS=linux go build -ldflags="-s -w" -o bin/main main.go
    - uses: actions/upload-artifact@v4
      with:
       name: my-artifact
       path: |
          bin/main
          serverless.yml
  deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
      - name: Display download list
        run: |
            ls -la
            ls -R

      - name: Stage Name
        id: stage_name
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          stage="dev"
            if [[ "$branch_name" == "main" ]]; then
            stage="prod"
            fi
            echo $stage
            echo "env-name=$stage" >> "$GITHUB_ENV"

      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: serverless deploy to prod
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: serverless/github-action@v3.2
        with:
         args: print --stage ${{ env.env-name}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: serverless deploy to dev
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: serverless/github-action@v3.2
        with:
         args: print --stage ${{ env.env-name}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
